{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cemcelik/Documents/GitHub/kcg-cms/pages/posts/[slug].js\";\nimport PostContent from '../../components/posts/post-detail/post-content';\nimport { getPostData, getPostFiles } from '../../helpers/posts-util';\n\nfunction PostDetailPage(props) {\n  return /*#__PURE__*/_jsxDEV(PostContent, {\n    post: props.post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\nexport function getStaticProps(context) {\n  const slug = context.params.slug;\n  const postData = getPostData(slug);\n  return {\n    props: {\n      post: postData\n    },\n    revalidate: 600\n  };\n}\nexport function getStaticPaths() {\n  const allPosts = getPostFiles();\n  const slugs = allPosts.map(fn => fn.replace(/\\.json$/, ''));\n  return {\n    paths: slugs.map(slug => ({\n      params: {\n        slug: slug\n      }\n    })),\n    fallback: false\n  };\n} // Below is a scenario each rendered dynamically by server\n// We could just render popular ones to speed up those ones only\n\n/* export function getStaticPaths() {\n    return {\n        paths: [],\n        fallback: 'blocking'\n    }\n} */\n\nexport default PostDetailPage;","map":{"version":3,"sources":["/Users/cemcelik/Documents/GitHub/kcg-cms/pages/posts/[slug].js"],"names":["PostContent","getPostData","getPostFiles","PostDetailPage","props","post","getStaticProps","context","slug","params","postData","revalidate","getStaticPaths","allPosts","slugs","map","fn","replace","paths","fallback"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,iDAAxB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,sBACI,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;AACD,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACpC,QAAMC,IAAI,GAAGD,OAAO,CAACE,MAAR,CAAeD,IAA5B;AACA,QAAME,QAAQ,GAAGT,WAAW,CAACO,IAAD,CAA5B;AACA,SAAO;AACHJ,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAEK;AADH,KADJ;AAIHC,IAAAA,UAAU,EAAE;AAJT,GAAP;AAMH;AACD,OAAO,SAASC,cAAT,GAA0B;AAC7B,QAAMC,QAAQ,GAAGX,YAAY,EAA7B;AACA,QAAMY,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAaC,EAAE,IAAIA,EAAE,CAACC,OAAH,CAAW,SAAX,EAAsB,EAAtB,CAAnB,CAAd;AACA,SAAO;AACHC,IAAAA,KAAK,EAAEJ,KAAK,CAACC,GAAN,CAAUP,IAAI,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAACD,QAAAA,IAAI,EAAEA;AAAP;AAAV,KAAL,CAAd,CADJ;AAEHW,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,C,CAED;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAehB,cAAf","sourcesContent":["import PostContent from '../../components/posts/post-detail/post-content'\nimport { getPostData, getPostFiles } from '../../helpers/posts-util'\nfunction PostDetailPage(props) {\n    return (\n        <PostContent post={props.post} />\n    )\n}\nexport function getStaticProps(context) {\n    const slug = context.params.slug\n    const postData = getPostData(slug)\n    return {\n        props: {\n            post: postData\n        },\n        revalidate: 600\n    }\n}\nexport function getStaticPaths() {\n    const allPosts = getPostFiles()\n    const slugs = allPosts.map(fn => fn.replace(/\\.json$/, ''))\n    return {\n        paths: slugs.map(slug => ({ params: {slug: slug } })),\n        fallback: false\n    }\n}\n\n// Below is a scenario each rendered dynamically by server\n// We could just render popular ones to speed up those ones only\n/* export function getStaticPaths() {\n    return {\n        paths: [],\n        fallback: 'blocking'\n    }\n} */\nexport default PostDetailPage\n"]},"metadata":{},"sourceType":"module"}