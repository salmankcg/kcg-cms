{"ast":null,"code":"import _regeneratorRuntime from \"/Users/cemcelik/Documents/GitHub/kcg-cms/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/cemcelik/Documents/GitHub/kcg-cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/cemcelik/Documents/GitHub/kcg-cms/components/contact/contact-form.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport classes from \"./contact-form.module.css\";\nimport Notification from \"../ui/notification\";\n\nfunction ContactForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      message = _useState3[0],\n      setMessage = _useState3[1];\n\n  var _useState4 = useState(),\n      requestStatus = _useState4[0],\n      setRequestStatus = _useState4[1]; // 'pending','success','error'\n\n\n  var _useState5 = useState(),\n      requestError = _useState5[0],\n      setRequestError = _useState5[1];\n\n  useEffect(function () {\n    if (requestStatus === \"success\" || requestStatus === \"error\") {\n      var timer = setTimeout(function () {\n        setRequestStatus(null);\n        setRequestError;\n      }, 3000);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n  }, [requestStatus]);\n\n  function sendContactData(_x) {\n    return _sendContactData.apply(this, arguments);\n  }\n\n  function _sendContactData() {\n    _sendContactData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(msg) {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/contact\", {\n                method: \"POST\",\n                body: JSON.stringify(msg),\n                header: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n\n              if (response.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              throw new Error(data.message || \"Something went wrong!\");\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _sendContactData.apply(this, arguments);\n  }\n\n  function sendMessageHandler(_x2) {\n    return _sendMessageHandler.apply(this, arguments);\n  }\n\n  function _sendMessageHandler() {\n    _sendMessageHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setRequestStatus(\"pending\");\n              _context2.prev = 2;\n              _context2.next = 5;\n              return sendContactData({\n                email: email,\n                name: name,\n                message: message\n              });\n\n            case 5:\n              setRequestStatus(\"success\");\n              setRequestError();\n              setEmail('');\n              setName('');\n              setMessage('');\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              setRequestError(_context2.t0.message);\n              setRequestStatus(\"error\");\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 12]]);\n    }));\n    return _sendMessageHandler.apply(this, arguments);\n  }\n\n  var notification;\n\n  switch (requestStatus) {\n    case \"success\":\n      notification = {\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Message sent successfully!\"\n      };\n      break;\n\n    case \"error\":\n      notification = {\n        status: \"error\",\n        title: \"Error!\",\n        message: requestError\n      };\n      break;\n\n    case \"pending\":\n      notification = {\n        status: \"pending\",\n        title: \"Pending!\",\n        message: \"Sending...\"\n      };\n      break;\n\n    default:\n      notification = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            required: true,\n            value: email,\n            onChange: function onChange(e) {\n              return setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            required: true,\n            value: name,\n            onChange: function onChange(e) {\n              return setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          id: \"message\",\n          rows: \"5\",\n          value: message,\n          onChange: function onChange(e) {\n            return setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"ADOZNSC+KtZKyR7IvP5AaIR1v18=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/cemcelik/Documents/GitHub/kcg-cms/components/contact/contact-form.js"],"names":["useState","useEffect","classes","Notification","ContactForm","email","setEmail","name","setName","message","setMessage","requestStatus","setRequestStatus","requestError","setRequestError","timer","setTimeout","clearTimeout","sendContactData","msg","fetch","method","body","JSON","stringify","header","response","json","data","ok","Error","sendMessageHandler","event","preventDefault","notification","status","title","contact","form","controls","control","e","target","value","actions"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\"\nimport classes from \"./contact-form.module.css\"\nimport Notification from \"../ui/notification\"\nfunction ContactForm() {\n  const [email, setEmail] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [requestStatus, setRequestStatus] = useState() // 'pending','success','error'\n  const [requestError, setRequestError] = useState()\n\n  useEffect(() => {\n    if (requestStatus === \"success\" || requestStatus === \"error\") {\n      const timer = setTimeout(() => {\n        setRequestStatus(null)\n        setRequestError;\n      }, 3000);\n      return () => clearTimeout(timer)\n    }\n  }, [requestStatus]);\n\n  async function sendContactData(msg) {\n    const response = await fetch(\"/api/contact\", {\n      method: \"POST\",\n      body: JSON.stringify(msg),\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json()\n    if (!response.ok) {\n      throw new Error(data.message || \"Something went wrong!\")\n    }\n  }\n  async function sendMessageHandler(event) {\n    event.preventDefault();\n    setRequestStatus(\"pending\")\n    try {\n      await sendContactData({ email, name, message })\n      setRequestStatus(\"success\")\n      setRequestError()\n      setEmail('')\n      setName('')\n      setMessage('')\n    } catch (error) {\n      setRequestError(error.message)\n      setRequestStatus(\"error\")\n    }\n  }\n  let notification\n  switch (requestStatus) {\n    case \"success\":\n      notification = {\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Message sent successfully!\",\n      };\n      break\n    case \"error\":\n      notification = {\n        status: \"error\",\n        title: \"Error!\",\n        message: requestError,\n      };\n      break\n    case \"pending\":\n      notification = {\n        status: \"pending\",\n        title: \"Pending!\",\n        message: \"Sending...\",\n      };\n      break\n    default:\n      notification = null;\n  }\n  return (\n    <section className={classes.contact}>\n      <h1>How can I help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              required\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"name\">Your name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"message\">Your message</label>\n          <textarea\n            name=\"message\"\n            id=\"message\"\n            rows=\"5\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n      {\n        notification &&\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      }\n    </section>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}