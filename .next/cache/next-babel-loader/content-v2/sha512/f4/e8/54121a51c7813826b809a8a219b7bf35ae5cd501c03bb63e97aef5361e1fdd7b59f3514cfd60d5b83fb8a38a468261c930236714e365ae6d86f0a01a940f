{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/cemcelik/Documents/GitHub/kcg-cms/components/contact/contact-form.js\";\nimport { useState, useEffect } from \"react\";\nimport classes from \"./contact-form.module.css\";\nimport Notification from \"../ui/notification\";\n\nfunction ContactForm() {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: requestStatus,\n    1: setRequestStatus\n  } = useState(); // 'pending','success','error'\n\n  const {\n    0: requestError,\n    1: setRequestError\n  } = useState();\n  useEffect(() => {\n    if (requestStatus === \"success\" || requestStatus === \"error\") {\n      const timer = setTimeout(() => {\n        setRequestStatus(null);\n        setRequestError;\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [requestStatus]);\n\n  async function sendContactData(msg) {\n    const response = await fetch(\"/api/contact\", {\n      method: \"POST\",\n      body: JSON.stringify(msg),\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.message || \"Something went wrong!\");\n    }\n  }\n\n  async function sendMessageHandler(event) {\n    event.preventDefault();\n    setRequestStatus(\"pending\");\n\n    try {\n      await sendContactData({\n        email,\n        name,\n        message\n      });\n      setRequestStatus(\"success\");\n      setRequestError();\n      setEmail('');\n      setName('');\n      setMessage('');\n    } catch (error) {\n      setRequestError(error.message);\n      setRequestStatus(\"error\");\n    }\n  }\n\n  let notification;\n\n  switch (requestStatus) {\n    case \"success\":\n      notification = {\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Message sent successfully!\"\n      };\n      break;\n\n    case \"error\":\n      notification = {\n        status: \"error\",\n        title: \"Error!\",\n        message: requestError\n      };\n      break;\n\n    case \"pending\":\n      notification = {\n        status: \"pending\",\n        title: \"Pending!\",\n        message: \"Sending...\"\n      };\n      break;\n\n    default:\n      notification = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.contact,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How can I help you?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: sendMessageHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.controls,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            required: true,\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          id: \"message\",\n          rows: \"5\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/cemcelik/Documents/GitHub/kcg-cms/components/contact/contact-form.js"],"names":["useState","useEffect","classes","Notification","ContactForm","email","setEmail","name","setName","message","setMessage","requestStatus","setRequestStatus","requestError","setRequestError","timer","setTimeout","clearTimeout","sendContactData","msg","response","fetch","method","body","JSON","stringify","header","data","json","ok","Error","sendMessageHandler","event","preventDefault","error","notification","status","title","contact","form","controls","control","e","target","value","actions"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;;AACA,SAASC,WAAT,GAAuB;AACrB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACW,aAAD;AAAA,OAAgBC;AAAhB,MAAoCZ,QAAQ,EAAlD,CAJqB,CAIgC;;AACrD,QAAM;AAAA,OAACa,YAAD;AAAA,OAAeC;AAAf,MAAkCd,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,aAAa,KAAK,SAAlB,IAA+BA,aAAa,KAAK,OAArD,EAA8D;AAC5D,YAAMI,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BJ,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAE,QAAAA,eAAe;AAChB,OAHuB,EAGrB,IAHqB,CAAxB;AAIA,aAAO,MAAMG,YAAY,CAACF,KAAD,CAAzB;AACD;AACF,GARQ,EAQN,CAACJ,aAAD,CARM,CAAT;;AAUA,iBAAeO,eAAf,CAA+BC,GAA/B,EAAoC;AAClC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,cAAD,EAAiB;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,GAAf,CAFqC;AAG3CO,MAAAA,MAAM,EAAE;AACN,wBAAgB;AADV;AAHmC,KAAjB,CAA5B;AAOA,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,QAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAUH,IAAI,CAAClB,OAAL,IAAgB,uBAA1B,CAAN;AACD;AACF;;AACD,iBAAesB,kBAAf,CAAkCC,KAAlC,EAAyC;AACvCA,IAAAA,KAAK,CAACC,cAAN;AACArB,IAAAA,gBAAgB,CAAC,SAAD,CAAhB;;AACA,QAAI;AACF,YAAMM,eAAe,CAAC;AAAEb,QAAAA,KAAF;AAASE,QAAAA,IAAT;AAAeE,QAAAA;AAAf,OAAD,CAArB;AACAG,MAAAA,gBAAgB,CAAC,SAAD,CAAhB;AACAE,MAAAA,eAAe;AACfR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KAPD,CAOE,OAAOwB,KAAP,EAAc;AACdpB,MAAAA,eAAe,CAACoB,KAAK,CAACzB,OAAP,CAAf;AACAG,MAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD;AACF;;AACD,MAAIuB,YAAJ;;AACA,UAAQxB,aAAR;AACE,SAAK,SAAL;AACEwB,MAAAA,YAAY,GAAG;AACbC,QAAAA,MAAM,EAAE,SADK;AAEbC,QAAAA,KAAK,EAAE,UAFM;AAGb5B,QAAAA,OAAO,EAAE;AAHI,OAAf;AAKA;;AACF,SAAK,OAAL;AACE0B,MAAAA,YAAY,GAAG;AACbC,QAAAA,MAAM,EAAE,OADK;AAEbC,QAAAA,KAAK,EAAE,QAFM;AAGb5B,QAAAA,OAAO,EAAEI;AAHI,OAAf;AAKA;;AACF,SAAK,SAAL;AACEsB,MAAAA,YAAY,GAAG;AACbC,QAAAA,MAAM,EAAE,SADK;AAEbC,QAAAA,KAAK,EAAE,UAFM;AAGb5B,QAAAA,OAAO,EAAE;AAHI,OAAf;AAKA;;AACF;AACE0B,MAAAA,YAAY,GAAG,IAAf;AAvBJ;;AAyBA,sBACE;AAAS,IAAA,SAAS,EAAEjC,OAAO,CAACoC,OAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAEpC,OAAO,CAACqC,IAAzB;AAA+B,MAAA,QAAQ,EAAER,kBAAzC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE7B,OAAO,CAACsC,QAAxB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEtC,OAAO,CAACuC,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,EAAE,EAAC,OAHL;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAEpC,KALT;AAME,YAAA,QAAQ,EAAGqC,CAAD,IAAOpC,QAAQ,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV;AAN3B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAK,UAAA,SAAS,EAAE1C,OAAO,CAACuC,OAAxB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,EAAE,EAAC,MAHL;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,KAAK,EAAElC,IALT;AAME,YAAA,QAAQ,EAAGmC,CAAD,IAAOlC,OAAO,CAACkC,CAAC,CAACC,MAAF,CAASC,KAAV;AAN1B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE;AAAK,QAAA,SAAS,EAAE1C,OAAO,CAACuC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,EAAE,EAAC,SAFL;AAGE,UAAA,IAAI,EAAC,GAHP;AAIE,UAAA,KAAK,EAAEhC,OAJT;AAKE,UAAA,QAAQ,EAAGiC,CAAD,IAAOhC,UAAU,CAACgC,CAAC,CAACC,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eAoCE;AAAK,QAAA,SAAS,EAAE1C,OAAO,CAAC2C,OAAxB;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EA2CIV,YAAY,iBACZ,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACC,MADvB;AAEE,MAAA,KAAK,EAAED,YAAY,CAACE,KAFtB;AAGE,MAAA,OAAO,EAAEF,YAAY,CAAC1B;AAHxB;AAAA;AAAA;AAAA;AAAA,YA5CJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;AAED,eAAeL,WAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport classes from \"./contact-form.module.css\"\nimport Notification from \"../ui/notification\"\nfunction ContactForm() {\n  const [email, setEmail] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [requestStatus, setRequestStatus] = useState() // 'pending','success','error'\n  const [requestError, setRequestError] = useState()\n\n  useEffect(() => {\n    if (requestStatus === \"success\" || requestStatus === \"error\") {\n      const timer = setTimeout(() => {\n        setRequestStatus(null)\n        setRequestError;\n      }, 3000);\n      return () => clearTimeout(timer)\n    }\n  }, [requestStatus]);\n\n  async function sendContactData(msg) {\n    const response = await fetch(\"/api/contact\", {\n      method: \"POST\",\n      body: JSON.stringify(msg),\n      header: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await response.json()\n    if (!response.ok) {\n      throw new Error(data.message || \"Something went wrong!\")\n    }\n  }\n  async function sendMessageHandler(event) {\n    event.preventDefault();\n    setRequestStatus(\"pending\")\n    try {\n      await sendContactData({ email, name, message })\n      setRequestStatus(\"success\")\n      setRequestError()\n      setEmail('')\n      setName('')\n      setMessage('')\n    } catch (error) {\n      setRequestError(error.message)\n      setRequestStatus(\"error\")\n    }\n  }\n  let notification\n  switch (requestStatus) {\n    case \"success\":\n      notification = {\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Message sent successfully!\",\n      };\n      break\n    case \"error\":\n      notification = {\n        status: \"error\",\n        title: \"Error!\",\n        message: requestError,\n      };\n      break\n    case \"pending\":\n      notification = {\n        status: \"pending\",\n        title: \"Pending!\",\n        message: \"Sending...\",\n      };\n      break\n    default:\n      notification = null;\n  }\n  return (\n    <section className={classes.contact}>\n      <h1>How can I help you?</h1>\n      <form className={classes.form} onSubmit={sendMessageHandler}>\n        <div className={classes.controls}>\n          <div className={classes.control}>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              required\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"name\">Your name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              required\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"message\">Your message</label>\n          <textarea\n            name=\"message\"\n            id=\"message\"\n            rows=\"5\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className={classes.actions}>\n          <button>Send Message</button>\n        </div>\n      </form>\n      {\n        notification &&\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      }\n    </section>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}